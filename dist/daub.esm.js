function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function n(n){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(r,!0).forEach(function(t){e(n,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):t(r).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))})}return n}function a(e){return null==e?"":String(e)}function r(e){let t=e.toString();return t=(t=t.replace(/^\//,"")).replace(/\/[mgiy]*$/,"")}function s(e){return String(e).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function p(e,t,n){let p="";if("function"!=typeof n){let e=new i(n);n=t=>e.evaluate(t)}if(t.flags&&t.flags.indexOf("g")>-1?t=function(e){let t=e.flags.replace("g","");return new RegExp(r(e),t)}(t):"string"==typeof t&&(t=s(t)),!t)return(n=n(""))+e.split("").join(n)+n;for(;e.length>0;){let r=e.length,s=e.match(t);if(s){let t,i=n(s,e);if(Array.isArray(i)&&([i,t]=i),p+=e.slice(0,s.index),p+=a(i),(e=void 0!==t?e.slice(s.index+t):e.slice(s.index+s[0].length)).length===r)throw new Error("Infinite loop detected; none of the string was consumed.")}else p+=e,e=""}return p}class i{constructor(e,t){this.template=String(e),this.pattern=t||i.DEFAULT_PATTERN}evaluate(e){return p(this.template,this.pattern,t=>{if(null==e)return"";let n=t[1]||"";if("\\"==n)return t[2];let r=e,s=t[3],p=/^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;if(null==(t=p.exec(s)))return n;for(;null!=t;){if(null==(r=r["["===t[1].charAt(0)?t[2].replace(/\\]/,"]"):t[1]])||""===t[3])break;s=s.substring("["===t[3]?t[1].length:t[0].length),t=p.exec(s)}return n+a(r)})}}function o(e,t){return 0!==t&&"\\"===e.charAt(t-1)}function l(e){let t=-1;do{t=e.indexOf("#",t+1)}while(t>-1&&o(e,t));return t>-1&&(e=e.substring(0,t)),e=e.trim()}i.DEFAULT_PATTERN=/(^|.|\r|\n)(#\{(.*?)\})/,i.interpolate=function(e,t){return new i(e).evaluate(t)};var c=function(e){let t=e.raw[0].split(/\n/).map(l).join("").replace(/\s/g,"");return t=t.replace(/(\\)(\\)(\d+)/g,(e,t,n,a)=>"".concat(n).concat(a)),new RegExp(t)};function u(e,t){return e?'<span class="'.concat(t,'">').concat(e,"</span>"):""}var d=Object.freeze({balance:function(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};r=Object.assign({startIndex:0,stackDepth:0,considerEscapes:!0},r);let{startIndex:s,stackDepth:p,considerEscapes:i}=r,o=t.length,l=n.length,c=e.length;for(let r=s;r<c;r++){r>0&&(a=e.slice(r-1,r));let s=!!i&&"\\"===a,c=e.slice(r,r+o);if(e.slice(r,r+l)!==n||s||p++,c===t&&!s&&0===--p)return r}return-1},balanceByLexer:function(e,t){let n=function e(t){for(let n=t.length-1;n>=0;n--){let a=t[n];if("string"!=typeof a)return Array.isArray(a.content)?e(a.content):a}return null}(t.run(e).tokens);return n.index+n.content.length-1},compact:function(e){return e=(e=e.replace(/^[\s\t]*/gm,"")).replace(/\n/g,"")},escapeRegExp:s,flattenTokens:function(e){let t=[];return function e(n){n.forEach(n=>{t.push(n),Array.isArray(n.content)&&e(n.content)})}(e),t},gsub:p,regExpToString:r,wrap:u,VerboseRegExp:c});class m{constructor(e){e.highlighter&&(this.highlighter=e.highlighter),this.storage=new Map}set(e,t){this.storage.set(e,t)}get(e,t){return this.storage.has(e)?this.storage.get(e):(this.storage.set(e,t),t)}}class g extends Error{constructor(e){super(e),this.name="ParseError"}}class b{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};"object"!=typeof e||t?(this.name=e,this.names=[e,...n.alias||[]],this._classNamePattern=new RegExp("\\b(?:"+this.names.join("|")+")\\b")):(this.name=null,n=t||n,t=e),this.options=n,this.rules=[],this._originalRules=t,this.extend(t),this.name&&this.names.forEach(e=>{console.log("REGISTERING:",e,this),b.register(e,this)})}_toObject(){return n({},this._originalRules)}parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.pattern;return n.lastIndex=0,n.test(e)?p(e,n,(e,a)=>{let r,s,p,i=0,o=1;for(;r=this.rules[i++];){if(!e[o]){o+=r.length;continue}if(r.index&&((p=r.index(e[0],t))<=0&&(p=void 0),void 0!==p&&(s=p+1,a=a.slice(0,e.index+s),!(e=n.exec(a))||!e[o]))){let t=new g('Bad "index" callback; requested substring did not match original rule.');throw Object.assign(t,{rule:r,source:a,match:e,index:p}),t}let i=[];for(let t=0;t<=r.length;t++)i.push(e[o+t]);if(i.name=r.name,r.captures)for(let e=0;e<i.length;e++){if(!(e in r.captures))continue;let n=r.captures[e];"function"==typeof n&&(n=n()),"string"==typeof n?i[e]=u(i[e],n):n instanceof b&&i[e]&&(i[e]=n.parse(i[e],t))}if(r.before){let e=r.before(i,t);void 0!==e&&(i=e)}let l=r.replacement;i.name||(i.name=r.name),i.index=e.index;let c=l.evaluate(i);if(r.after){let e=r.after(c,t);void 0!==e&&(c=e)}return void 0!==p?[c,s]:c}return""}):e}_makeRules(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[];for(let a in e){let r=new f(a,e[a],t);n.push(r),t+=r.length}return n}match(e){return this._classNamePattern.test(e)}extend(){let e;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];if(1!==n.length)return n.forEach(e=>this.extend(e)),this;if((e=n[0])instanceof b&&(e=e.toObject()),!e)throw new Error("Nonexistent grammar!");let r=0;this.rules.length&&(r=this.rules.map(e=>e.length).reduce((e,t)=>e+t));let s=e,p=this._makeRules(s,r);return this.rules.push(...p),this.pattern=new RegExp(this.rules.map(e=>e.pattern).join("|"),this.options.ignoreCase?"mi":"m"),this}toObject(){let e={};return this.rules.forEach(t=>{e[t.name]=t.toObject()}),e}}const h={};b.register=(e,t)=>{h[e]=t},b.find=e=>(console.log("looking up:",e,h),h[e]||null),b.debug=()=>h;class f{constructor(e,t,n){this.name=e;let a=t.replacement;a?this.replacement=a instanceof i?a:new i(a):t.captures?this.replacement=null:this.replacement=f.DEFAULT_TEMPLATE,this.debug=t.debug,this.before=t.before,this.after=t.after,this.index=t.index,this.captures=t.captures;let s=t.pattern,p=t.pattern;"string"!=typeof p&&(p=r(p));let o=((p=p.replace(/\\(\d+)/g,(e,t)=>{let a=Number(t);return"\\".concat(n+a+1)})).match(/\(/g)||"").length,l=(p.match(/\(\?[:!=]/g)||"").length+(p.match(/\\\(/g)||"").length-(p.match(/\\\(\?[:!=]/g)||"").length;this.length=o+1-l,this.pattern="(".concat(p,")"),this.originalPattern=s,this.replacement||(this.replacement=f.makeReplacement(this.length,t.wrapReplacement))}toObject(){return{pattern:this.originalPattern,replacement:this.replacement,before:this.before,after:this.after,index:this.index,captures:this.captures}}}f.DEFAULT_TEMPLATE=new i('<span class="#{name}">#{0}</span>'),f.makeReplacement=(e,t)=>{let n=[];for(let t=1;t<e;t++)n.push(t);let a=n.join("}#{");a="#{".concat(a,"}");let r=t?'<span class="#{name}">'.concat(a,"</span>"):a;return new i(r)};class w{constructor(){let{worker:e,node:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this.worker=e,this.node=t||document.body,!(this.worker instanceof Worker))throw new TypeError('Invalid "worker" option.');if(!("nodeType"in this.node))throw new TypeError('Invalid "node" option.');this._setupWorker(),this.uid=0}addElement(e){this.elements.indexOf(e)>-1||this.elements.push(e)}_getLanguage(e){let t=e.getAttribute("data-language");return t||(t=e.className),t}scan(){console.log("AsyncHighlighter#scan");let e=Array.from(this.node.querySelectorAll("code:not([data-daub-highlighted])"));e&&e.length&&e.forEach(e=>{console.log("AsyncHighlighter Handling node:",e);let t=this.uid;e.setAttribute("data-daub-uid",this.uid++);let n=e.innerHTML,a=this._getLanguage(e);this.parse(n,a,t,t=>{console.log("[AsyncHighlighter] Got source back:",n),this._updateElement(e,t,a),e.setAttribute("data-daub-highlighted","true");let r={element:e,language:a};this._fire("highlighted",e,r,{cancelable:!1})})})}_handleMessage(e){console.log("AsyncHighlighter handling message:",e);let{id:t,language:n,source:a}=e.data,r=this.node.querySelector('[data-daub-uid="'.concat(t,'"]'));console.log(" does the element exist?",t,r),r&&this._updateElement(r,a,n)}_setupWorker(){console.log("setting up worker:",this.worker),this.worker.onmessage=e=>this._handleMessage(e)}_updateElement(e,t,n){e.ownerDocument;let a=document.createRange().createContextualFragment(t),r={element:e,language:n,fragment:a},s=this._fire("will-highlight",e,r);s.defaultPrevented||s.detail.fragment&&(a=s.detail.fragment,e.innerHTML="",e.appendChild(a))}_fire(e,t,a){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};a=n({highlighter:this},a);let s=n({bubbles:!0,cancelable:!0},r,{detail:a}),p=new CustomEvent("daub-".concat(e),s);return t.dispatchEvent(p),p}parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2?arguments[2]:void 0;if(!t)throw new Error("Must specify a language!");this.worker.postMessage({type:"parse",text:e,id:n,language:t})}}class y{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.grammars=[],this._grammarTable={},this.elements=[],this.options=Object.assign({},y.DEFAULT_OPTIONS,e)}addElement(e){this.elements.indexOf(e)>-1||this.elements.push(e)}addGrammar(e){if(!e.name)throw new Error("Can't register a grammar without a name.'");this.grammars.indexOf(e)>-1||(this.grammars.push(e),e.name&&(this._grammarTable[e.name]=e))}scan(e){this.grammars.forEach(t=>{let n=t.names.map(e=>{let t=this.options.classPrefix+e;return"code.".concat(t,":not([data-highlighted])")}).join(", "),a=e.querySelectorAll(n);(a=Array.from(a))&&a.length&&a.forEach(e=>{if(e.hasAttribute("data-daub-highlighted"))return;let n=new m({highlighter:this}),a=e.innerHTML;t.options.encode&&(a=a.replace(/</g,"&lt;"));let r=this.parse(a,t,n);this._updateElement(e,r,t),e.setAttribute("data-daub-highlighted","true");let s={element:e,grammar:t};this._fire("highlighted",e,s,{cancelable:!1})})})}highlight(){this.elements.forEach(e=>this.scan(e))}_updateElement(e,t,n){let a=e.ownerDocument.createRange().createContextualFragment(t),r={element:e,grammar:n,fragment:a},s=this._fire("will-highlight",e,r);s.defaultPrevented||(s.detail.fragment&&(a=s.detail.fragment),e.innerHTML="",e.appendChild(a))}_fire(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};Object.assign(n,{highlighter:this});let r=Object.assign({bubbles:!0,cancelable:!0},a,{detail:n}),s=new CustomEvent("daub-".concat(e),r);return t.dispatchEvent(s),s}parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if("string"==typeof t){if(!(t=this._grammarTable[t]))return e}else if(!t)throw new Error("Must specify a grammar!");return n||(n=new m({highlighter:this})),t.parse(e,n)}}function x(e){return"function"==typeof e?e():e}function k(e,t){let n=e.final;if("boolean"==typeof n)return n;if("function"==typeof n)return n(t);if(n)throw new TypeError("Invalid value for rule.final!");return!1}y.DEFAULT_OPTIONS={classPrefix:""};class _ extends Error{constructor(e){super(e),this.name="LexerError"}}class A{constructor(e,t,n,a){this.name=e,this.content=t,this.index=a+n}}class v{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.rules=e,this.name=t}addRules(e){this.rules.push(...e)}[Symbol.iterator](){let e=[];for(let t of this.rules)if(t.include){let n=x(t.include);e.push([...n])}else e.push(t);return e.values()}run(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{startIndex:n=0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=[];t||(t=new Map);let r=null,s=n;for(;e;){let n,p,i;for(let a of this){if((i=a.pattern.exec(e))&&a.test){a.test(i,e,t,a.pattern)||(i=null)}if(i){if(0===i.index){p=i,n=a;break}(!p||i.index<p.index)&&(p=i,n=a)}}if(!p)break;let o=p.index,l=p.index+p[0].length;if(p.index>0){let t=e.slice(0,p.index);a.push(t),s+=t.length,o=0}e=e.slice(l);let c=k(n,t),u=c&&n.skipSubRulesIfFinal;if(n.raw)a.push(p[0]),s+=p[0].length;else if(!n.inside&&!n.after||u){let e=new A(n.name,p[0],o,s);a.push(e),s+=p[0].length}else{let r,i,l;if(n.inside?(l="inside",r=n.inside.name,i=x(n.inside.lexer)):(l="after",r=n.after.name,i=x(n.after.lexer)),!(i&&i instanceof v))throw new _("Invalid lexer!");let c=new A(n.name,p[0],o,s),u=s+p[0].length-o,d=[];"inside"===l?d.push(c):a.push(c);let m=i.run(e,t,{startIndex:u});d.push(...m.tokens);let g=new A(r,d,o,s);a.push(g),s=m.lengthConsumed,e=m.text}if(c)break;if(e===r)break;r=e}return{tokens:a,text:e,lengthConsumed:s}}}const{balance:$,compact:z,VerboseRegExp:Z}=d;let E=new b({parameter:{pattern:/(?:\b|^)((?:(?:[A-Za-z_$][\w\d]*)\s)*)(\s*)([a-zA-Z_$:][\w\d]*)(?=,|$)/,replacement:z('\n      <span class="parameter">\n        <span class="storage storage-type">#{1}</span>\n        #{2}\n        <span class="variable">#{3}</span>\n      </span>\n    '),captures:{1:()=>q}}}),j=new b({escape:{pattern:/\\./}});const O=new b({"meta: function":{pattern:/([A-Za-z_$]\w*)(\s+)([a-zA-Z_$:]\w*)(\s*)(\()(.*)(\))(\s*)(?={)/,index(e){let t=$(e,")","(",{startIndex:e.indexOf("(")});return e.indexOf("{",t)-1},replacement:"<b><span class='storage storage-type storage-return-type'>#{1}</span>#{2}#{3}#{4}#{5}#{6}#{7}#{8}</b>",captures:{3:"entity",6:()=>E}},"meta: bare declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(?=;)/,captures:{1:"storage storage-type",3:"variable"}},"meta: declaration with assignment":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(=)/,captures:{1:"storage storage-type",3:"variable",5:"operator"}},"meta: array declaration":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\[)(\d+)(\])/,captures:{1:"storage storage-type",3:"variable",4:"punctuation",5:"number",6:"punctuation"}},"meta: declaration with parens":{pattern:/\b([A-Za-z_$][\w\d]*)(\s+)([A-Za-z_$][\w\d]*)(\s*)(\()([\s\S]*)(\))(;)/,index(e){let t=$(e,")","(")+1;return e.indexOf(";",t)},captures:{1:"storage storage-type",3:"variable",5:"punctuation",6:()=>R,7:"punctuation"}},"meta: class declaration":{pattern:/\b(class|enum)(\s+)([A-Za-z][A-Za-z0-9:_$]*)(\s*)({)/,captures:{1:"storage storage-type",3:"entity entity-class"}}}),R=new b({constant:{pattern:/\b[A-Z_]+\b/},lambda:{pattern:/(\[\])(\s*)(\()([\s\S]*)(\))(\s*)({)([\s\S]*)(})/,index:e=>$(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{1:"punctuation",3:"punctuation",4:()=>E,5:"punctuation",7:"punctuation",8:()=>I,9:"punctuation"}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\')*)(')/,wrapReplacement:!0,captures:{2:()=>j}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\")*)(")/,wrapReplacement:!0,captures:{2:()=>j}},number:{pattern:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i}}),S=new b({comment:{pattern:/(\/\/[^\n]*(?=\n|$))|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/}}),q=new b({"storage storage-type":{pattern:/\b(?:u?int(?:8|16|36|64)_t|int|long|float|double|char(?:16|32)_t|char|class|bool|wchar_t|volatile|virtual|extern|mutable|const|unsigned|signed|static|struct|template|private|protected|public|mutable|volatile|namespace|struct|void|short|enum)/}}),T=new b({}).extend(S,R),P=new b({"macro macro-define":{pattern:/^(\#define)(\s+)(\w+)(.*?)$/,replacement:z('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="entity entity-macro">#{3}</span>\n      #{4}\n    '),captures:{1:"keyword keyword-macro",3:"entity entity-macro",4:()=>T}},"macro macro-include":{pattern:/^(\#include)(\s+)("|<|&lt;)(.*?)("|>|&gt;)(?=\n|$)/,replacement:z('\n      <span class="keyword keyword-macro">#{1}</span>#{2}\n      <span class="string string-include">\n        <span class="punctuation">#{3}</span>\n        #{4}\n        <span class="punctuation">#{5}</span>\n      </span>\n    ')},"macro macro-with-one-argument":{pattern:/(\#(?:ifdef|ifndef|undef|if))(\s+)(\w+)/,captures:{1:"keyword keyword-macro",3:"entity entity-macro"}},"macro macro-error":{pattern:/(#error)(\s*)(")(.*)(")/,replacement:z('\n      <span class="keyword keyword-macro">#{1}</span>\n      #{2}\n      <span class="string string-quoted">#{3}#{4}#{5}</span>\n    ')},"keyword keyword-macro":{pattern:/#(endif|else)/}}),I=new b("arduino",{"keyword keyword-control":{pattern:/\b(?:alignas|alignof|asm|auto|break|case|catch|compl|constexpr|const_cast|continue|decltype|default|delete|do|dynamic_cast|else|explicit|export|for|friend|goto|if|inline|new|noexcept|nullptr|operator|register|reinterpret_cast|return|sizeof|static_assert|static_cast|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|using|while)\b/}}).extend(S,O);I.extend(P,R,q,{operator:{pattern:/--?|\+\+?|!=?|(?:<|&lt;){1,2}=?|(&gt;|>){1,2}=?|-(?:>|&gt;)|:{1,2}|={1,2}|\^|~|%|&{1,2}|\|\|?|\?|\*|\/|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}});const{balanceByLexer:C,compact:N,VerboseRegExp:L}=d,D=new v([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin"),r=e.exec(t);return!!r&&(r[1]===a&&(n.set("string-begin",null),r))},final:!0}]),F=new v([{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>{let a=e.exec(t);return!!a&&(n.set("string-begin",a[1]),a)},inside:{name:"string",lexer:D}}]),M=new v([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:F}}]),H=new v([{name:"tag tag-html",pattern:/^[a-z]+(?=\s)/},{name:"attribute-name",pattern:/^\s*(?:\/)?[a-z]+(?=\=)/,after:{name:"attribute-separator",lexer:M}},{name:"punctuation",pattern:/\/(?:>|&gt;)/,final:!0},{name:"punctuation",pattern:/(>|&gt;)/,final:!0}]),V=new v([{name:"punctuation",pattern:/^(?:<|&lt;)/,after:{name:"tag",lexer:H}}]),B=new b({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z-:]+)(=)/,replacement:N("\n      <span class='attribute'>\n        <span class='#{name}'>#{1}</span>\n        <span class='punctuation'>#{2}</span>\n      </span>\n    ")}}),U=new b("html",{doctype:{pattern:/&lt;!DOCTYPE([^&]|&[^g]|&g[^t])*&gt;/},"embedded embedded-javascript":{pattern:/(&lt;|<)(script|SCRIPT)(\s+.*?)?(&gt;|>)([\s\S]*?)((?:&lt;|<)\/)(script|SCRIPT)(&gt;|>)/,replacement:N("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n        #{5}\n      <span class='element element-closing'>\n        <span class='punctuation'>#{6}</span>\n        <span class='tag'>#{7}</span>\n        <span class='punctuation'>#{8}</span>\n      </span>\n    "),before:(e,t)=>{e[3]&&(e[3]=B.parse(e[3],t)),e[5]=t.highlighter.parse(e[5],"javascript",t)}},"tag tag-open":{pattern:/((?:<|&lt;))([a-zA-Z0-9:]+\s*)([\s\S]*)(\/)?(&gt;|>)/,index:function(e){return C(e,V)},replacement:N("\n      <span class='element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}#{5}</span>\n      </span>#{6}\n    "),before:(e,t)=>{e[3]=B.parse(e[3],t)}},"tag tag-close":{pattern:/(&lt;\/)([a-zA-Z0-9:]+)(&gt;)/,replacement:N("\n      <span class='element element-closing'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>\n        <span class='punctuation'>#{3}</span>\n      </span>\n    ")},comment:{pattern:/&lt;!\s*(--([^-]|[\r\n]|-[^-])*--\s*)&gt;/}},{encode:!0}),{balance:G,compact:X,wrap:W,VerboseRegExp:J}=d;let Q=new b({escape:{pattern:/\\./}}),Y=new b({escape:{pattern:/\\./},"exclude from group begin":{pattern:/(\\\()/,replacement:"#{1}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}});function K(e,t){return te.parse(e,t)}let ee=new b({interpolation:{pattern:/(\$\{)(.*?)(\})/,replacement:"<span class='#{name}'><span class='punctuation'>#{1}</span><span class='interpolation-contents'>#{2}</span><span class='punctuation'>#{3}</span></span>",before:(e,t)=>{e[2]=se.parse(e[2],t)}}}).extend(Q);const te=new b({"parameter parameter-with-default":{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*=\s*)(.*?)(?=,|\)|\n|$)/,replacement:X('\n      <span class="parameter">\n        <span class="variable">#{1}</span>\n        <span class="operator">#{2}</span>\n      #{3}\n      </span>\n    '),before:(e,t)=>{e[3]=ae.parse(e[3],t)}},"keyword operator":{pattern:/\.{3}/},"variable parameter":{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}});let ne=new b({"string string-template embedded":{pattern:/(`)([^`]*)(`)/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",before:(e,t)=>{e[2]=ee.parse(e[2],t)}},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\[^'])*)(')/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",before:(e,t)=>{e[2]=Q.parse(e[2],t)}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\[^"])*)(")/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",before:(e,t)=>{e[2]=Q.parse(e[2],t)}}}),ae=new b(n({constant:{pattern:/\b(?:arguments|this|false|true|super|null|undefined)\b/},"number number-binary-or-octal":{pattern:/0[bo]\d+/},number:{pattern:/(?:\d*\.?\d+)/}},ne.toObject(),{comment:{pattern:/(\/\/[^\n]*\n)|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/},regexp:{pattern:/(\/)(.*?[^\\])(\/)([mgiy]*)/,replacement:"<span class='regexp'>#{1}#{2}#{3}#{4}</span>",before:(e,t)=>{e[2]=Y.parse(e[2],t),e[4]&&(e[4]=W(e[4],"keyword regexp-flags"))}}})),re=new b({alias:{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*)(:)(\s*)(?=\w|\{|\[)/,replacement:"<span class='entity'>#{1}</span>#{2}#{3}#{4}"},variable:{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}}),se=new b("javascript",{},{alias:["js"]});se.extend(ae),se.extend({"meta: digits in the middle of identifiers":{pattern:/\$\d/,replacement:"#{0}"},"meta: properties with keyword names":{pattern:/(\.)(for|if|while|switch|catch|return)\b/,replacement:"#{0}"},"meta: functions with keyword names":{pattern:/(\s*)\b(for|if|while|switch|catch)\b/,replacement:"#{1}<span class='keyword'>#{2}</span>"},"meta: fat arrow function, one arg, no parens":{pattern:/([a-zA-Z_$][a-zA-Z0-9_$]*)(\s*)(=(?:&gt;|>))/,replacement:"#{1}#{2}#{3}",before:(e,t)=>{e[1]=K(e[1],t)}},"meta: fat arrow function, args in parens":{pattern:/(\()([^\)]*?)(\))(\s*)(=(?:&gt;|>))/,replacement:"#{1}#{2}#{3}#{4}#{5}",before:(e,t)=>{e[2]=K(e[2],t)}},"keyword keyword-new":{pattern:/new(?=\s[A-Za-z_$])/},"variable variable-declaration":{pattern:/\b(var|let|const)(\s+)([A-Za-z_$][_$A-Z0-9a-z]*?)(?=\s|=|;|,)/,replacement:"<span class='storage'>#{1}</span>#{2}<span class='#{name}'>#{3}</span>"},"variable variable-assignment":{pattern:/(\s+|,)([A-Za-z_$][\w\d$]*?)(\s*)(?==)/,replacement:"#{1}<span class='#{name}'>#{2}</span>#{3}"},"meta: destructuring assignment":{pattern:/(let|var|const)(\s+)(\{|\[)([\s\S]*)(\}|\])(\s*)(?==)/,index:e=>{let t=/(let|var|const|)(\s+)(\{|\[)/.exec(e)[3];return G(e,t,{"{":"}","[":"]"}[t],{startIndex:e.indexOf(t)+1})},replacement:"<span class='storage'>#{1}</span>#{2}#{3}#{4}#{5}#{6}#{7}",before:(e,t)=>{e[4]=re.parse(e[4],t)}},"function function-expression":{pattern:/\b(function)(\s*)([a-zA-Z_$]\w*)?(\s*)(\()(.*?)(\))/,replacement:"<span class='keyword keyword-function'>#{1}</span>#{2}#{3}#{4}#{5}#{6}#{7}",before:function(e,t){return e[3]&&(e[3]="<span class='entity'>".concat(e[3],"</span>")),e[6]=K(e[6],t),e}},"function function-literal-shorthand-style":{pattern:/(^\s*)(get|set|static)?(\s*)([a-zA-Z_$][a-zA-Z0-9$_]*)(\s*)(\()(.*?)(\))(\s*)(\{)/,replacement:"#{1}#{2}#{3}<span class='entity'>#{4}</span>#{5}#{6}#{7}#{8}#{9}#{10}",before:(e,t)=>{e[2]&&(e[2]="<span class='storage'>".concat(e[1],"</span>")),e[7]=K(e[7],t)}},"function function-assigned-to-variable":{pattern:/\b([a-zA-Z_?\.$]+\w*)(\s*)(=)(\s*)(function)(\s*)(\()(.*?)(\))/,replacement:"<span class='variable'>#{1}</span>#{2}#{3}#{4} <span class='keyword'>#{5}</span>#{6}#{7}#{8}#{9}",before:(e,t)=>{e[8]=K(e[8],t)}},"meta: property then function":{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(:)(\s*)(?=function)/,replacement:"<span class='entity'>#{1}</span>#{2}#{3}"},entity:{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(?=:)/},"meta: class definition":{pattern:/(class)(?:(\s+)([A-Z][A-Za-z0-9_]*))?(?:(\s+)(extends)(\s+)([A-Z][A-Za-z0-9_$\.]*))?(\s*)({)/,index:e=>G(e,"}","{",{startIndex:e.indexOf("{")+1}),replacement:X('\n      <span class="storage">#{1}</span>\n      #{2}#{3}\n      #{4}#{5}#{6}#{7}\n      #{8}#{9}\n    '),before:e=>{e[3]&&(e[3]=W(e[3],"entity entity-class")),e[5]&&(e[5]=W(e[5],"storage")),e[7]&&(e[7]=W(e[7],"entity entity-class entity-superclass"))}},storage:{pattern:/\b(?:var|let|const|class|extends|async)\b/},keyword:{pattern:/\b(?:try|catch|finally|if|else|do|while|for|break|continue|case|switch|default|return|yield|throw|await)\b/},"keyword operator":{pattern:/!==?|={1,3}|>=?|<=?|\+\+|\+|--|-|\*|[\*\+-\/]=|\?|\.{3}|\b(?:instanceof|in|of)\b/}});const{balance:pe,balanceByLexer:ie,compact:oe,wrap:le,VerboseRegExp:ce}=d,ue=new v([{name:"string-escape",pattern:/\\./},{name:"string-end",pattern:/('|")/,test:(e,t,n)=>{let a=n.get("string-begin");return e[1]===a&&(n.set("string-begin",null),e)},final:!0}],"string"),de=new v([{name:"punctuation",pattern:/\{/,inside:{lexer:()=>de}},{name:"punctuation",pattern:/\}/,final:!0}],"balance-braces"),me=new v([{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"interpolation-end",pattern:/\}/,final:!0}],"template-string-interpolation"),ge=new v([{name:"interpolation-start",pattern:/(\$\{)/,inside:{name:"interpolation",lexer:me}},{name:"exclude escaped backtick",pattern:/\\\x60/,raw:!0},{name:"string-end",pattern:/\x60/,final:!0}],"template-string"),be=new v([{name:"punctuation",pattern:/\{/,inside:{lexer:de}},{name:"exclude escaped closing brace",pattern:/\\\}/,raw:!0},{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:ue}},{name:"template-string-begin",pattern:/\x60/,inside:{name:"template-string",lexer:ge}},{name:"interpolation-end",pattern:/\}/,final:!0}],"jsx-interpolation"),he=new v([{name:"interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:be}}],"before-jsx-interpolation"),fe=new v([{name:"interpolation-begin",pattern:/^\{/,inside:{name:"interpolation",lexer:be},final:!0},{name:"string-begin",pattern:/^\s*('|")/,test:(e,t,n)=>(n.set("string-begin",e[1]),e),inside:{name:"string",lexer:ue}}],"attribute-value"),we=new v([{name:"punctuation",pattern:/^=/,after:{name:"attribute-value",lexer:fe}}],"attribute-separator"),ye=new v([{name:"tag tag-html",pattern:/^[a-z]+(?=&gt;|>)/},{name:"tag tag-jsx",pattern:/^[A-Z][A-Za-z0-9_$\.]*(?=&gt;|>)/},{name:"punctuation",pattern:/^\s*(?:>|&gt;)/,test:(e,t,n)=>{let a=n.get("jsx-tag-depth");if(a<1)throw new Error("Depth error!");return a--,n.set("jsx-tag-depth",a),e},final:!0}],"jsx-closing-tag"),xe=new v([{name:"punctuation",pattern:/^\s*\{/,inside:{name:"interpolation",lexer:be}},{name:"attribute-name",pattern:/^\s*[a-zA-Z][a-zA-Z0-9_$]+(?=\=)/,after:{name:"attribute-separator",lexer:we}},{name:"punctuation",pattern:/^\s*\/(?:>|&gt;)/,test:(e,t,n)=>(n.set("is-opening-tag",null),e),final:e=>e.get("is-root")},{name:"punctuation",pattern:/^\s*(>|&gt;)/,test:(e,t,n)=>{let a=n.get("is-opening-tag"),r=n.get("jsx-tag-depth");return 0!==(r+=a?1:-1)&&(n.set("jsx-tag-depth",r),n.set("is-opening-tag",null),e)},final:e=>{let t=e.get("jsx-tag-depth");return e.get("only-opening-tag")||0===t},skipSubRulesIfFinal:!0,after:{name:"jsx-contents",lexer:()=>ke}}],"inside-tag"),ke=new v([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,after:{name:"tag",lexer:()=>_e}},{name:"punctuation",pattern:/(?:<|&lt;)\/(?=[A-Za-z])/,inside:{name:"element jsx-element",lexer:ye},final:!0},{name:"punctuation",pattern:/\{/,inside:{name:"interpolation",lexer:be}}],"within-tag"),_e=new v([{name:"tag tag-html",pattern:/^[a-z\-]+(?=\s|(?:>|&gt;))/,test:(e,t,n)=>{return n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e},after:{name:"jsx-tag-contents",lexer:xe},final:e=>e.get("only-opening-tag")},{name:"tag tag-jsx",pattern:/^[A-Z][\w\d$\.]*(?=\s|(?:>|&gt;))/,test:(e,t,n)=>{return n.set("is-opening-tag",!0),"number"!=typeof n.get("jsx-tag-depth")&&n.set("jsx-tag-depth",0),e},after:{name:"jsx-tag-contents",lexer:xe}}],"tag-name"),Ae=new v([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("only-opening-tag",!0),e),after:{name:"tag",lexer:_e},final:!0}],"tag-open-start"),ve=new v([{name:"punctuation",pattern:/^\s*(?:<|&lt;)(?!\/)/,test:(e,t,n)=>(n.set("is-root",!0),e),after:{name:"tag",lexer:_e}}],"tag-root");let $e=new b({escape:{pattern:/\\./}}),ze=new b({escape:{pattern:/\\./},"exclude from group begin":{pattern:/(\\\()/,replacement:"#{1}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),Ze=new b({interpolation:{pattern:/(\$\{)(.*?)(\})/,captures:{1:"punctuation interpolation-start",2:()=>Ue,3:"punctuation interpolation-end"},wrapReplacement:!0}}).extend($e);const Ee=new b({"parameter parameter-with-default":{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*=\s*)(.*?)(?=,|\)|\n|$)/,captures:{1:"variable parameter",2:"operator",3:()=>Le}},"keyword operator":{pattern:/\.{3}/},operator:{pattern:/=/},"variable parameter":{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/}});let je=new b({"string string-template embedded":{pattern:/(`)((?:[^`\\]|\\\\|\\.)*)(`)/,captures:{1:"punctuation string-start",2:Ze,3:"punctuation string-end"},wrapReplacement:!0},"string string-single-quoted":{pattern:/(')((?:[^'\\]|\\\\|\\.)*)(')/,replacement:"<span class='#{name}'>#{1}#{2}#{3}</span>",captures:{2:$e}},"string string-double-quoted":{pattern:/(")((?:[^"\\]|\\\\|\\.)*)(")/,captures:{2:$e},wrapReplacement:!0}}),Oe=new b({"embedded jsx-interpolation":{pattern:/(\{)([\s\S]*)(\})/,index:e=>ie(e,he),captures:{1:"punctuation embedded-start",2:()=>Be,3:"punctuation embedded-end"},wrapReplacement:!0}}),Re=new b({string:{pattern:/('[^']*[^\\]'|"[^"]*[^\\]")/},attribute:{pattern:/\b([a-zA-Z-:]+)(=)/,replacement:oe("\n      <span class='attribute'>\n        <span class='#{name}'>#{1}</span>\n        <span class='punctuation'>#{2}</span>\n      </span>\n    ")}}).extend(Oe),Se=new b({});Se.extend(Re),Se.extend(Oe),Se.extend({"punctuation punctuation-tag-close":{pattern:/>|\/>/}});let qe=new b({jsx:{pattern:/(<|&lt;)([a-zA-Z_$][a-zA-Z0-9_$\.]*\s*)([\s\S]*)(&gt;|>)/,index:e=>ie(e,ve),replacement:oe("\n      <span class='jsx'>#{0}</span>\n    "),before:e=>{e[0]=Ie.parse(e[0])}}});function Te(e){return e.match(/^[A-Z]/)?le(e,"tag tag-jsx"):le(e,"tag tag-html")}let Pe=new b({"meta: opening tag without attributes":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(&gt;|>)/,replacement:oe("\n      <span class='jsx-element element element-opening'>\n        <span class='punctuation'>#{1}</span>\n        #{2}\n        <span class='punctuation'>#{3}</span>\n      </span>\n    "),before(e,t){e[2]=Te(e[2])}},"tag tag-open":{pattern:/(<|&lt;)([\w$][\w\d$\.]*)(\s+)([\s\S]*)(.)(&gt;|>)/,replacement:oe("\n      <span class='#{name}'>\n        <span class='punctuation'>#{1}</span>\n        #{2}#{3}#{4}#{5}\n        <span class='punctuation'>#{6}</span>\n      </span>\n    "),index:e=>ie(e,Ae),before(e,t){e.name="jsx-element element element-opening",e[2]=Te(e[2]),e[5]&&("/"===e[5]?(e.name=e.name.replace("element-opening","element-self"),e[5]=le(e[5],"punctuation")):(e[4]+=e[5],e[5]="")),e[4]=Re.parse(e[4],t)}},"tag tag-close":{pattern:/((?:<|&lt;)\/)([\w$][\w\d_$\.]*)(\s*)(&gt;|>)/,replacement:oe("\n      <span class='jsx-element element element-closing'>\n        <span class='punctuation'>#{1}</span>\n        <span class='tag'>#{2}</span>#{3}\n        <span class='punctuation'>#{4}</span>\n      </span>\n    ")}}),Ie=new b({}).extend(Oe,Pe),Ce=new b({params:{pattern:/(\()([^)]+)(\))/,wrapReplacement:!0,captures:{1:"punctuation",2:Ee,3:"punctuation"}},"variable parameter":{pattern:/[\w$][\w\d_$]*/}}),Ne=new b({"single-parameter multiline arrow function":{pattern:/([\w$][\w\d$]*)(\s*)(=(?:>|&gt;))/,captures:{1:Ce,3:"operator"}},"meta: arrow function with params in parentheses":{pattern:/(\([^)]+\))(\s*)(=(?:>|&gt;))/,captures:{1:Ce,3:"operator"}},"single line arrow function":{pattern:/(\(?[^)]\)?|[a-zA-Z_$][a-zA-Z0-9_$]*)(\s*)(=(?:>|&gt;))(\s*)/,captures:{1:Ce,3:"operator"}}}),Le=new b({});Le.extend({constant:{pattern:/\b(?:arguments|this|false|true|super|null|undefined)\b/},"number number-binary-or-octal":{pattern:/0[bo]\d+/},number:{pattern:/(?:\d*\.?\d+)/}}),Le.extend(Ne),Le.extend(je),Le.extend({comment:{pattern:/(\/\/[^\n]*\n)|(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/},regexp:{pattern:/(\/)(.*?[^\\])(\/)([mgiy]*)/,captures:{2:ze,4:"keyword regexp-flags"},wrapReplacement:!0}});let De=new b({alias:{pattern:/([A-Za-z$_][$_A-Za-z0-9_]*)(\s*)(:)(\s*)(?=\w|\{|\[)/,captures:{1:"entity"}},variable:{pattern:/[A-Za-z$_][$_A-Za-z0-9_]*/},operator:{pattern:/=/}}),Fe=new b({ordinary:{pattern:/(^|,)(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"variable variable-import"}},"default as":{pattern:/(^|,)(\s*)(default)(\s*)(as)(\s*)([\w$][\w\d$]*)(\s*)(?=$|,)/,captures:{1:"punctuation",3:"keyword keyword-default",5:"keyword keyword-as",7:"variable variable-import"}}}),Me=new b({"implicit default specifier":{pattern:/^(\s*)([A-Za-z_$][A-Za-z_$0-9]*)(\s*)(?=,|$)/,captures:{2:"variable variable-import"}},specifiers:{pattern:/(\{)(\s*)([^}]+)(})/,captures:{3:Fe}}}),He=new b({"import with destructuring":{pattern:/(^\s*)(import)(\s*)(?=\{)([\s\S]*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:Me,6:"keyword keyword-from",8:je}},"import with source":{pattern:/(^\s*)(import)(\s*)(.*?)(\s*)(from)(\s*)(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>Me,6:"keyword keyword-from",8:()=>je}},"import without source":{pattern:/(^\s*)(import)(\s*)(?=\`|'|")(.*?)(?=;|\n)/,captures:{2:"keyword keyword-import",4:()=>je}}}),Ve=new b({"keyword operator":{pattern:/\|\||&&|&amp;&amp;|!==?|={1,3}|>=?|<=?|\+\+|\+|--|-|\*|[\*\+-\/]=|\?|\.{3}|\b(?:instanceof|in|of)\b/}}),Be=new b({});Be.extend(Pe),Be.extend(Le),Be.extend(Ne),Be.extend(Ve);let Ue=new b("javascript-jsx",{},{alias:["react","javascript"]});Ue.extend(qe),Ue.extend(He),Ue.extend(Le),Ue.extend({"meta: exclude digits in the middle of identifiers":{pattern:/\$\d/,replacement:"#{0}"},"meta: properties with keyword names":{pattern:/(\.)(for|if|while|switch|catch|return)\b/,replacement:"#{0}"},"meta: functions with keyword names":{pattern:/(\s*)\b(for|if|while|switch|catch)\b/,replacement:"#{1}<span class='keyword'>#{2}</span>"},"meta: new keyword plus identifier":{pattern:/(new)(\s+)((?:[\w$][\w\d$]*\.)*)([\w$][\w\d$]*)(?=\()/,captures:{1:"keyword keyword-new",4:"entity-class"}},"meta: variable declaration":{pattern:/\b(var|let|const)(\s+)([\w$][\w\d$]*?)(\s*)(?=\s|=|;|,)/,captures:{1:"storage",3:"variable"}},"meta: variable assignment":{pattern:/(\s+|,)([A-Za-z_$][\w\d$]*?)(\s*)(?==)(?!=(?:>|&gt;))/,captures:{2:"variable"}},"meta: destructuring assignment":{pattern:/(let|var|const)(\s+)(\{|\[)([\s\S]*)(\}|\])(\s*)(=)/,index:e=>{let t=/(let|var|const|)(\s+)(\{|\[)/.exec(e)[3],n=pe(e,{"{":"}","[":"]"}[t],t),a=e.indexOf("=",n);e.slice(0,a+1);return a},captures:{1:"storage",4:De,7:"operator"}},"function function-expression":{pattern:/\b(function)(\s*)([a-zA-Z_$]\w*)?(\s*)(\()(.*?)(\))/,captures:{1:"keyword keyword-function",3:"entity",5:"punctuation",6:Ee,7:"punctuation"}},"function function-literal-shorthand-style":{pattern:/(^\s*)(get|set|static)?(\s*)([\w$][\w\d$]*)(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{2:"storage",4:"entity",6:"punctuation",7:Ee,8:"punctuation"}},"meta: function shorthand with computed property name":{pattern:/(])(\s*)(\()(.*?)(\))(\s*)(?=\{)/,captures:{3:"punctuation",4:Ee,5:"punctuation",7:"punctuation"}},"function function-assigned-to-variable":{pattern:/\b([\w$][\w\d$]*)(\s*)(=)(\s*)(function)(\s*)(\()(.*?)(\))/,captures:{1:"variable",3:"operator",5:"keyword",7:"punctuation",8:Ee,9:"punctuation"}},"meta: property then function":{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(:)(\s*)(?=function)/,captures:{1:"entity",2:"punctuation"}},entity:{pattern:/([A-Za-z_$][A-Za-z0-9_$]*)(?=:)/},"meta: class definition":{pattern:/(class)(?:(\s+)([A-Z][A-Za-z0-9_]*))?(?:(\s+)(extends)(\s+)([A-Z][A-Za-z0-9_$\.]*))?(\s*)({)/,index:e=>pe(e,"}","{",{startIndex:e.indexOf("{")+1}),replacement:oe('\n      <span class="storage">#{1}</span>\n      #{2}#{3}\n      #{4}#{5}#{6}#{7}\n      #{8}#{9}\n    '),captures:{1:"storage",3:"entity entity-class",5:"storage",7:"entity entity-class entity-superclass"}},storage:{pattern:/\b(?:var|let|const|class|extends|async)\b/},keyword:{pattern:/\b(?:try|catch|finally|if|else|do|while|for|break|continue|case|switch|default|return|yield|throw|await)\b/}}).extend(Ve);const{balance:Ge,wrap:Xe,compact:We,VerboseRegExp:Je}=d,Qe=new b({interpolation:{pattern:/\{(\d*)\}/},"escape escape-hex":{pattern:/\\x[0-9a-fA-F]{2}/},"escape escape-octal":{pattern:/\\[0-7]{3}/},escape:{pattern:/\\./}}),Ye=new b({lambda:{pattern:/(lambda)(\s+)(.*?)(:)/,captures:{1:"keyword storage",3:()=>et}},"string string-triple-quoted":{pattern:/"""[\s\S]*?"""/,before:(e,t)=>{e[0]=Qe.parse(e[0],t)}},"string string-raw string-single-quoted":{pattern:/([urb]+)(')(.*?[^\\]|[^\\]*)(')/,replacement:"<span class='storage string'>#{1}</span><span class='#{name}'>#{2}#{3}#{4}</span>",captures:{3:()=>Qe}},"string string-single-quoted":{pattern:/([ub])?(')((?:[^'\\]|\\.)*)(')/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Qe}},"string string-double-quoted":{pattern:/([ub])?(")((?:[^"\\]|\\.)*)(")/,replacement:"#{1}<span class='#{name}'>#{2}#{3}#{4}</span>",captures:{1:"storage string",3:()=>Qe}},constant:{pattern:/\b(self|None|True|False)\b/},"constant constant-assignment":{pattern:/^([A-Z][A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},"constant constant-named":{pattern:/\b([A-Z_]+)(?!\.)\b/},"variable variable-assignment":{pattern:/([a-z_][[A-Za-z\d_]*)(\s*)(?=\=)/,replacement:"<span class='#{name}'>#{1}</span>#{2}"},number:{pattern:/(\b|-)((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b/},"number number-binary":{pattern:/0b[01]+/},"number number-octal":{pattern:/0o[0-7]+/}}),Ke=new b({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable parameter",3:"keyword punctuation",4:Ye}}}).extend(Ye),et=new b({"meta: parameter":{pattern:/(\s*)(\*\*?)?([A-Za-z0-9_]+)(?=,|$)/,captures:{2:"keyword operator",3:"variable parameter"}}}),tt=new b({"meta: parameter with default":{pattern:/(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*?)(?=,|$)/,captures:{2:"variable parameter",3:"keyword punctuation",4:()=>Ye}}}).extend(et),nt=new b("python",{"storage storage-type support":{pattern:/(int|float|bool|chr|str|bytes|list|dict|set)(?=\()/},"support support-builtin":{pattern:/(repr|round|print|input|len|min|max|sum|sorted|enumerate|zip|all|any|open)(?=\()/},"meta: from/import/as":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(\s+)(as)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword",9:"keyword"}},"meta: from/import":{pattern:/(from)(\s+)(.*?)(\s+)(import)(\s+)(.*?)(?=\n|$)/,captures:{1:"keyword",5:"keyword"}},"meta: subclass":{pattern:/(class)(\s+)([\w\d_]+)(\()([\w\d_]*)(\))(\s*)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation",5:"entity entity-class entity-superclass",6:"punctuation",8:"punctuation"}},"meta: class":{pattern:/(class)(\s+)([\w\d_]+)(:)/,captures:{1:"keyword",3:"entity entity-class",4:"punctuation"}},comment:{pattern:/#[^\n]*(?=\n)/},keyword:{pattern:/\b(?:if|else|elif|print|class|pass|from|import|raise|while|try|finally|except|return|global|nonlocal|for|in|del|with)\b/},"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?]+)(\s*)(\()(.*?)?(\))/,captures:{1:"keyword",3:"entity",5:"punctuation",6:tt,7:"punctuation"}},"meta: method invocation":{pattern:/([A-Za-z0-9_!?]+)(\s*)(\()(\s*)([\s\S]*)(\s*\))/,index:e=>Ge(e,")","(",e.indexOf("(")),captures:{3:"punctuation",5:()=>Ke,6:"punctuation"}},"keyword operator operator-logical":{pattern:/\b(and|or|not)\b/},"keyword operator operator-bitwise":{pattern:/(?:&|\||~|\^|>>|<<)/},"keyword operator operator-assignment":{pattern:/=/},"keyword operator operator-comparison":{pattern:/(?:>=|<=|!=|==|>|<)/},"keyword operator operator-arithmetic":{pattern:/(?:\+=|\-=|=|\+|\-|%|\/\/|\/|\*\*|\*)/}});nt.extend(Ye);const{balance:at,compact:rt,VerboseRegExp:st}=d;function pt(e,t){return e.indexOf(t)>-1}function it(e,t){let n=e.slice(t).join(""),a=at(n,"}","{",{stackDepth:1});if(-1===a)return;let r=0;for(let n=t;n<e.length;n++)if((r+=e[n].length)>=a)return n}function ot(e,t,n){let a=[];for(let r=t;r<=n;r++)a.push(e[r]);return a.join(",")}function lt(e,t,n){t||(t=ct);let a=e.split(/,/),r=[];for(let e,t=0;t<a.length;t++)if(e=a[t],pt(s=e,"{")&&!pt(s,"}")){let e=it(a,t+1),n=ot(a,t,e);r.push(n),t=e}else r.push(e);var s;return r.map(e=>t.parse(e,n))}const ct=new b({"meta: parameter with default":{pattern:/^(\s*)([A-Za-z0-9_]+)(\s*=\s*)(.*)/,captures:{2:"variable parameter",3:"keyword operator",4:()=>dt}},"meta: variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,captures:{2:"variable parameter"}}}),ut=new b({"meta: block variable":{pattern:/^(\s*)([A-Za-z0-9_]+)$/,replacement:"#{1}<span class='#{name}'>#{2}</span>",captures:{2:"variable parameter"}}}),dt=new b({"string string-single-quoted":{pattern:/(')([^']*?)(')/},"string string-double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:()=>gt}},"string string-double-quoted empty":{pattern:/\"\"/},"string string-percent-q string-percent-q-braces":{pattern:/(%Q\{)([\s\S]*)(\})/,index:e=>at(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>gt}},"string string-percent-q string-percent-q-brackets":{pattern:/(%Q\[)(.*?[^\\])(\])/,wrapReplacement:!0,captures:{2:()=>gt}},"string embedded string-shell-command":{pattern:/(`)([^`]*?)(`)/,wrapReplacement:!0,captures:{2:()=>gt}},constant:{pattern:/\b(self|true|false|nil(?!\?))\b/},"number binary":{pattern:/\b0b[01](?:_[01]|[01])*\b/},number:{pattern:/\b(\d(?:[_.]\d|\d)*)\b/},"punctuation punctuation-namespace":{pattern:/(::)/},symbol:{pattern:/:[A-Za-z0-9_!?]+/},"symbol single-quoted":{pattern:/:'([^']*?)'/},"symbol double-quoted":{pattern:/(:)(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{3:()=>gt}},regexp:{pattern:/(\/)(.*?)(\/)/,wrapReplacement:!0,captures:{2:()=>mt}},"variable variable-instance":{pattern:/(@)[a-zA-Z_][\w\d]*/},"variable variable-global":{pattern:/(\$)[a-zA-Z_][\w\d]*/},keyword:{pattern:/\b(do|class|def|if|module|yield|then|else|for|until|unless|while|elsif|case|when|break|retry|redo|rescue|require|lambda)\b/}}),mt=new b({escape:{pattern:/\\./},"meta: exclude from group begin":{pattern:/\\\(/,replacement:"#{0}"},"group-begin":{pattern:/(\()/,replacement:'<b class="group">#{1}'},"group-end":{pattern:/(\))/,replacement:"#{1}</b>"}}),gt=new b({escape:{pattern:/\\./},interpolation:{pattern:/(#\{)(.*?)(\})/,captures:{1:"punctuation",2:()=>bt,3:"punctuation"},wrapReplacement:!0}}),bt=new b("ruby",{"meta: method definition":{pattern:/(def)(\s+)([A-Za-z0-9_!?.]+)(?:\s*(\()(.*?)(\)))?/,captures:{1:"keyword",3:"entity"},before:(e,t)=>{e[5]&&(e[5]=lt(e[5],null,t))}},"block block-braces":{pattern:/(\{)(\s*)(\|)([^|]*?)(\|)/,replacement:rt("\n      <b class='#{name}'>\n        <span class='punctuation brace'>#{1}</span>#{2}\n        <span class='punctuation pipe'>#{3}</span>\n        #{4}\n        <span class='punctuation pipe'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=lt(e[4],ut,t)}},"block block-do-end":{pattern:/(do)(\s*)(\|)([^|]*?)(\|)/,replacement:rt("\n      <b class='#{name}'>\n        <span class='keyword'>#{1}</span>#{2}\n        <span class='punctuation pipe'>#{3}</span>\n        #{4}\n        <span class='punctuation pipe'>#{5}</span>\n    "),before:(e,t)=>{t.get("bracesStack",[]).push(e.name),e[4]=lt(e[4],null,t),e[6]=bt.parse(e[6],t)}},"meta: class definition with superclass":{pattern:/(class)(\s+)([A-Z][A-Za-z0-9_]*)(\s*(?:<|&lt;)\s*)([A-Z][A-Za-z0-9:_]*)/,replacement:rt("\n      <span class='keyword'>#{1}</span>#{2}\n      <span class='class-definition-signature'>\n        <span class='class'>#{3}</span>#{4}<span class='class superclass'>#{5}</span>\n      </span>\n    ")},"meta: class or module definition":{pattern:/(class|module)(\s+)([A-Z][A-Za-z0-9_]*)\s*(?=$|\n)/,replacement:rt("\n      <span class='keyword'>#{1}</span>#{2}\n      <span class='class-definition-signature'>\n        <span class='class'>#{3}</span>\n      </span>\n    ")},"string heredoc-indented":{pattern:/(&lt;&lt;-|<<-)([_\w]+?)\b([\s\S]+?)(\2)/,replacement:rt("\n      <span class='#{name}'>\n        <span class='heredoc-begin'>#{1}#{2}</span>\n        #{3}\n        <span class='heredoc-end'>#{4}</span>\n      </span>\n    "),captures:{2:()=>gt}},"keyword operator":{pattern:/(\+|-|\*|\/|>|&gt;|<|&lt;|=>|=&gt;|>>|&gt;&gt;|<<|&lt;&lt;|=~|\|\|=|==|=|\|\||&&|\+=|-=|\*=|\/=)/},"keyword special":{pattern:/\b(initialize|new|loop|extend|raise|attr|catch|throw|private|protected|public|module_function|attr_(?:reader|writer|accessor))\b/}});bt.extend(dt),bt.extend({comment:{pattern:/#[^\n]+/},"bracket-block-end":{pattern:/\}/,replacement:"#{0}",after:(e,t)=>{let n=t.get("bracesStack",[]).pop();if(n)return"".concat(e,"\x3c!-- close ").concat(n," --\x3e</b>")}},"keyword keyword-block-end":{pattern:/\b(end)\b/,after:(e,t)=>{let n=t.get("bracesStack",[]).pop();if(n)return"".concat(e,"\x3c!-- close ").concat(n," --\x3e</b>")}}});const{balance:ht,compact:ft,VerboseRegExp:wt}=d;const yt=new b({"support support-function-call support-function-call-css-builtin":{pattern:/(attr|counter|rgb|rgba|hsl|hsla|calc)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>jt,4:"punctuation"}},"support support-function-call support-function-call-sass":{pattern:/(red|green|blue|mix|hue|saturation|lightness|adjust-hue|lighten|darken|saturate|desaturate|grayscale|complement|invert|alpha|opacity|opacify|transparentize|fade-in|fade-out|selector-(?:nest|replace)|unquote|quote|str-(?:length|insert|index|slice)|to-(?:upper|lower)-case|percentage|round|ceil|floor|abs|min|max|random|(?:feature|variable|global-variable|mixin)-exists|inspect|type-of|unit|unitless|comparable|call|if|unique-id)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>jt,4:"punctuation"}},"support support-function-call support-function-call-url":{pattern:/(url)(\()(.*)(\))/,index:e=>ht(e,")","(",{startIndex:e.indexOf("(")}),replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{let n=Mt.parse(e[3],t);/^('|")/.test(e[3])||(n=xt.parse(e[3],t),n="<span class='string string-unquoted'>".concat(n,"</span>")),e[3]=n}},"support support-function-call support-function-call-custom":{pattern:/([A-Za-z_-][A-Za-z0-9_-]*)(\()(.*)(\))/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{2:"punctuation",3:()=>jt,4:"punctuation"}}}),xt=new b({interpolation:{pattern:/(\#\{)(.*?)(})/,captures:{1:"punctuation interpolation-begin",2:()=>jt,3:"punctuation interpolation-end"},wrapReplacement:!0}});function kt(e){return new b({[e]:{pattern:/\$[A-Za-z0-9_-]+/}})}const _t=kt("variable"),At=new b({"variable variable-assignment":{pattern:/(\s*)(\$[A-Za-z][A-Za-z0-9_-]*)\b(\s*)(\:)([\s\S]*?)(;)/,captures:{2:"variable variable-assignment",4:"punctuation",5:()=>jt}}}).extend(_t),vt=new b({"parameter parameter-with-default":{pattern:/(\$[A-Za-z][A-Za-z0-9_-]*)(\s*:\s*)(.*?)(?=,|\)|\n)/,replacement:ft('\n      <span class="parameter">\n        #{1}#{2}#{3}\n      </span>\n    '),captures:{1:"variable",2:"punctuation",3:()=>jt}}}).extend(kt("variable parameter")),$t=new b({"selector selector-class selector-abstract-class":{pattern:/(%)[a-zA-Z0-9_-]+/},"selector selector-element-wildcard":{pattern:/\*/},"selector selector-element":{pattern:/\b(a|abbr|acronym|address|area|article|aside|applet|audio|b|base|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video)\b/},"selector selector-class":{pattern:/\.[a-zA-Z][a-zA-Z0-9_\-]*\b/},"selector selector-id":{pattern:/#[a-zA-Z][a-zA-Z0-9_-]*/},"selector selector-pseudo selector-pseudo-not":{pattern:/(:not\()(.*)(\))/,replacement:ft("\n      <span class='#{name}'>\n        #{1}\n        <span class='parameter'>#{2}</span>\n        #{3}\n      </span>\n    "),captures:{2:()=>$t}},"selector selector-self-reference-bem-style":{pattern:/(?:&amp;|&)(?:__|--)(?:[A-Za-z0-9_-]+)?/},"selector selector-interpolation":{pattern:/(#\{)(.*)(\})/,index:e=>ht(e,"}","{",{startIndex:e.indexOf("{")}),wrapReplacement:!0,captures:{2:()=>jt}},"selector selector-self-reference":{pattern:/(?:&amp;|&)/},"selector selector-pseudo selector-pseudo-with-args":{pattern:/((?:\:+)\b(?:lang|nth-(?:last-)?child|nth-(?:last-)?of-type))(\()(.*)(\))/,wrapReplacement:!0,captures:{3:()=>jt}},"selector selector-pseudo selector-pseudo-without-args":{pattern:/(:{1,2})(link|visited|hover|active|focus|targetdisabled|enabled|checked|indeterminate|root|first-child|last-child|first-of-type|last-of-type|only-child|only-of-type|empty|valid|invalid)/},"selector selector-pseudo selector-pseudo-element":{pattern:/(:{1,2})(-(?:webkit|moz|ms)-)?\b(after|before|first-letter|first-line|selection|any-link|local-link|(?:input-)?placeholder|focus-inner|matches|nth-match|column|nth-column)\b/},"selector selector-attribute":{pattern:/(\[)([A-Za-z_-][A-Za-z0-9_-]*)(?:([~\.$^]?=)((['"])(?:.*?)(?:\5)|[^\s\]]))?(\])/,wrapReplacement:!0,captures:{4:()=>Rt}},"selector selector-combinator":{pattern:/(\s*)([>+~])(\s*)/,replacement:"#{1}<span class='#{name}'>#{2}</span>#{3}"}}),zt=new b({"meta: map pair":{pattern:/([a-zA-Z_-][a-zA-Z0-9_-]*)(\s*:\s*)(.*(?:,|\)|$))/,captures:{1:"entity",2:"punctuation",3:()=>jt}}}),Zt=new b({"operator operator-logical":{pattern:/\b(and|or|not)\b/}}),Et=new b({"operator operator-arithmetic":{pattern:/\*|\+|\-(?=\s|\(|\d|$)|\//},"operator operator-comparison":{pattern:/!=|==|</}}).extend(Zt),jt=new b({"meta: possible map":{pattern:/(\()([\s\S]+)(\))/,replacement:"#{1}#{2}#{3}",before:(e,t)=>{let n=jt;/[A-Za-z_-][A-Za-z0-9_-]*:.*(?:,|\)|$)/.test(e[2])&&(n=zt),e[2]=n.parse(e[2],t)}},"constant constant-boolean":{pattern:/\b(?:true|false)\b/},constant:{pattern:/\b(?:null)\b/},"support support-property-value":{pattern:/inherit|initial|unset|none|auto|inline-block|block|inline|absolute|relative|solid|dotted|dashed|nowrap|normal|bold|italic|underline|overline|double|uppercase|lowercase|(?:border|content)-box/},"meta: value with unit":{pattern:/([\+|\-]?(?:\s*)?(?:[0-9]+(?:\.[0-9]+)?|\.[0-9]+))(\s*)((?:ch|cm|deg|dpi|dpcm|dppx|em|ex|grad|in|mm|ms|pc|pt|px|rad|rem|turn|s|vh|vmin|vw)\b|%)/,captures:{1:"number",3:"unit"}}}).extend(Et,_t),Ot=new b({number:{pattern:/[\+|\-]?(\s*)?([0-9]+(\.[0-9]+)?|\.[0-9]+)/}}),Rt=new b({"string single-quoted":{pattern:/(')([^']*?)(')/,wrapReplacement:!0,captures:{2:xt}},"string double-quoted":{pattern:/(")(.*?[^\\])(")/,wrapReplacement:!0,captures:{2:xt}},"string single-quoted string-empty":{pattern:/''/},"string double-quoted string-empty":{pattern:/""/}}),St=new b({"constant color-hex":{pattern:/#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b/},"constant color-named":{pattern:/\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b/}}),qt=new b({"keyword directive":{pattern:/\s+!(?:default|important|optional)/}});jt.extend(yt,Rt,St,Ot,qt,{support:{pattern:/\b([\w-]+)\b/}});const Tt=new b({"comment comment-line":{pattern:/(?:\s*)\/\/(?:.*?)(?=\n)/},"comment comment-block":{pattern:/(?:\s*)(\/\*)([\s\S]*)(\*\/)/}}),Pt=new b({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(;)/,captures:{1:"property",3:()=>jt}}}),It=new b({support:{pattern:/\b(?:only|screen)\b/},"meta: property group":{pattern:/(\()(.*)(\))/,replacement:"#{1}#{2}#{3}",captures:{2:()=>Ft}}}).extend(Zt),Ct=new b({}).extend(yt,Et,jt),Nt=new b({}).extend(vt,jt,{"string string-unquoted":{pattern:/\b\w+\b/}}),Lt=new b({"meta: from/to":{pattern:/\b(from|to)\b(\s*)(?={)/,captures:{1:"keyword"}},"meta: percentage":{pattern:/(\d+%)(\s*)(?={)/,captures:{1:()=>jt}}}).extend(Pt),Dt=new b({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,replacement:'<span class="property">#{1}</span>#{2}#{3}#{4}',captures:{1:"property",2:"punctuation",3:()=>jt}}}).extend(Zt),Ft=new b({"meta: property pair":{pattern:/([\-a-z]+)(\s*:\s*)([^;]+)(?=\)|$)/,captures:{1:"property",3:()=>jt}}}),Mt=new b({}).extend(Rt,At,yt),Ht=new b({"meta: at-rule":{pattern:/(@(?:elseif|if|else))(.*)({)/,captures:{1:"keyword keyword-at-rule keyword-at-rule-if",2:Ct}},"keyword keyword-at-rule keyword-at-rule-keyframes":{pattern:/(@keyframes)(\s+)([a-z-]+)(\s*)({)([\s\S]*)(})/,index:e=>ht(e,"}","{",{startIndex:e.indexOf("{")}),captures:{1:"keyword keyword-at-rule keyword-at-rule-keyframes",3:"entity",6:Lt}},"keyword keyword-at-rule keyword-at-rule-log-directive":{pattern:/(@(?:error|warn|debug))(\s+|\()(.*)(\)?;)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:Rt}},"keyword keyword-at-rule keyword-at-rule-each":{pattern:/(@each)(.*)\b(in)\b(.*)(\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{2:()=>At,3:"keyword",4:()=>jt}},"keyword keyword-at-rule keyword-at-rule-for":{pattern:/(@for)(.*)\b(from)\b(.*)(through)(.*)({)/,replacement:ft("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}#{6}#{7}\n    "),captures:{2:()=>At,3:"keyword",4:()=>jt,5:"keyword",6:()=>jt}},"keyword keyword-at-rule keyword-at-rule-mixin":{pattern:/(@mixin)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:ft("\n      <span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:vt}},"keyword keyword-at-rule keyword-at-rule-function":{pattern:/(@function)(\s+)([A-Za-z-][A-Za-z0-9\-_]+)(?:(\s*\())?(.*)(?={)/,replacement:ft("\n      <span class='#{name}'>#{1}</span>\n      #{2}#{3}#{4}#{5}\n    "),captures:{3:"function",5:vt}},"keyword keyword-at-rule keyword-at-rule-extend":{pattern:/(@extend)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",before:(e,t)=>{e[3]=$t.parse(e[3],t),e[3]=e[3].replace(/(class=)(["'])(?:selector)\b/g,"$1$2entity parameter"),/!optional$/.test(e[3])&&(e[3]=e[3].replace(/(!optional)$/,"<span class='keyword keyword-directive'>$1</span>"))}},"keyword keyword-at-rule keyword-at-rule-include":{pattern:/(@include)(\s+)([A-Za-z][A-Za-z0-9\-_]+)(?:(\s*\())?([\s\S]*?)(;|\{)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"function",5:Nt}},"keyword keyword-at-rule keyword-at-rule-media":{pattern:/(@media)(.*)({)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:It}},"keyword keyword-at-rule keyword-at-rule-import":{pattern:/(@import)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}",captures:{2:Rt}},"keyword keyword-at-rule keyword-at-rule-content":{pattern:/(@content)(?=;)/},"keyword keyword-at-rule keyword-at-rule-charset":{pattern:/(@charset)(\s+)(.*)(;)(\s*)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:Rt}},"keyword keyword-at-rule keyword-at-rule-namespace":{pattern:/(@namespace)(\s+)(?:([a-zA-Z][a-zA-Z0-9]+)(\s+))?([^\s]*)(;)(?=\n|$)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}#{6}",captures:{3:"selector",5:yt},before:(e,t)=>{e[3]||(e[4]="")}},"keyword keyword-at-rule keyword-at-rule-supports":{pattern:/(@supports)(\s+)(.*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}#{5}",captures:{3:Dt}},"keyword keyword-at-rule keyword-at-rule-font-face":{pattern:/(@font-face)(\s*)({)(\s*)(?=\n)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}"},"keyword keyword-at-rule keyword-at-rule-return":{pattern:/(@return)(\s+)(.*)(;)/,replacement:"<span class='#{name}'>#{1}</span>#{2}#{3}#{4}",captures:{3:()=>jt}}}),Vt=new b("scss",{});Vt.extend(yt,At,Ht),Vt.extend({"meta: selector line":{pattern:/(^\s*)((?:[>\+~]|\.|\#|\[|(?:&|&amp;)|%|\*|(?:a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\b).*)(,|\{)/,index:e=>{return((e,t,n,a)=>{let r;for(let s=a;s<n.length;s++){let a=n.slice(s,s+e.length);if(r!==t&&a===e)return s;r=a.slice(-1)}})("{","#",e,0)},captures:{2:$t}}}),Vt.extend(Pt,Tt);const Bt=new b({variable:{pattern:/(\$[\d\w_\-]+)\b|(\$\{[\d\w_\-]+\})/}}),Ut=new b({variable:{pattern:/(\$[\w_\-]+)\b/}}),Gt=new b("shell",{comment:{pattern:/#[^\n]*(?=\n|$)/},string:{pattern:/(?:'[^']*'|"[^"]*")/,before:(e,t)=>{e[0]=Bt.parse(e[0],t)}},function:{pattern:/(\w[\w\d_\-]+)(?=\()/},"shell-command shell-command-backticks":{pattern:/`[^`]*`/,before:(e,t)=>{e[0]=Ut.parse(e[0],t)}},"shell-command":{pattern:/\$\(.*?\)/,before:(e,t)=>{e[0]=Ut.parse(e[0],t)}},"support support-builtin":{pattern:/\b(?:sudo|chmod|cd|mkdir|ls|cat|echo|touch|mv|cp|rm|ln|sed|awk|tr|xargs|yes|pbcopy|pbpaste)\b/},"support support-other":{pattern:/\b(?:ruby|gem|rake|python|pip|easy_install|node|npm|php|perl|bash|sh|zsh|gcc|go|mate|subl|atom)\b/},number:{pattern:/\b(?:[0-9]+(\.[0-9]+)?)\b/},constant:{pattern:/\b(?:false|true)\b/},"constant constant-home":{pattern:/(^|\s*|\n)~(?=\b|\/)/},keyword:{pattern:/\b(?:if|fi|case|esac|for|do|else|then|while|exit|done|shift)\b/},operator:{pattern:/>|&gt;|&&|&amp;&amp;/},variable:{pattern:/(\$[\w_\-]+)\b/},"variable-assignment":{pattern:/([A-Za-z_][A-Za-z0-9_]*)(=)/,replacement:"<span class='variable'>#{1}</span><span class='operator'>#{2}</span>"},"variable variable-in-braces":{pattern:/\$\{.+?}(?=\n|\b)/}},{alias:["bash"]});function Xt(e){let{childNodes:t}=e;if(0===t.length)return null;for(let e=0;e<t.length;e++){let n=t[e];if(n.nodeType===Node.TEXT_NODE)return n;let a=Xt(n);if(a)return a}return null}function Wt(e){let{fragment:t}=e.detail,n=Xt(t);if(n){let e=n.nodeValue;e&&e.match(/^(\s*\n)/)&&(e=e.replace(/^(\s*\n)/,"")),n.parentNode.replaceChild(document.createTextNode(e),n)}let a=function(e){let{childNodes:t}=e;if(0===t.length)return null;for(let e=t.length-1;e>=0;e--){let n=t[e];if(n.nodeType===Node.TEXT_NODE)return n;let a=Xt(n);if(a)return a}return null}(t);if(a){let e=a.nodeValue;e&&e.match(/(\s*\n)+$/)&&(e=e.replace(/(\s*\n)+$/,"")),a.parentNode.replaceChild(document.createTextNode(e),a)}}function Jt(e){let t=e.target,n=t.parentNode,{fragment:a}=e.detail,r=t.getAttribute("data-lines")||n.getAttribute("data-lines");if(!r)return;let s=(p=r)?p.split(/,\s*/).map(function(e){let t={};if(e.indexOf("-")>-1){let[n,a]=e.split("-").map(e=>Number(e));t.start=n,t.lines=a+1-n}else t.start=Number(e),t.lines=1;return t}):null;var p;if(!s)return;n.style.position="relative";let i=function(e){let t=getComputedStyle(e);return parseFloat(t.lineHeight)}(t),o=function(e,t){let n=document.createElement("span");n.setAttribute("class","daub-line-highlight-dummy"),n.setAttribute("aria-hidden","true"),n.textContent=" ",e.insertBefore(n,e.firstChild);let a=t.getBoundingClientRect(),r=n.getBoundingClientRect(),s=a.top-r.top;return e.removeChild(n),Math.abs(s)}(t,n);s.forEach(e=>{let t=function(e,t,n){let a=document.createElement("mark");a.setAttribute("class","daub-line-highlight"),a.setAttribute("aria-hidden","true"),a.textContent=new Array(e.lines).join("\n")+" ";let r=n+(e.start-1)*t-2;return Object.assign(a.style,{position:"absolute",top:r+"px",left:"0",right:"0",lineHeight:"inherit"}),a}(e,i,o);a.appendChild(t)})}const Qt={arduino:I,html:U,javascript:se,jsx:Ue,python:nt,ruby:bt,scss:Vt,shell:Gt},Yt={Arduino:I,HTML:U,JavaScript:se,JSX:Ue,Python:nt,Ruby:bt,SCSS:Vt,Shell:Gt},Kt={"whitespace-normalizer":function(){document.addEventListener("daub-will-highlight",Wt)},"line-highlighter":function(){document.addEventListener("daub-will-highlight",Jt)}};function en(){let{grammars:e=[],plugins:t=[]}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=new y;return e.map(e=>Qt[e]).forEach(e=>{e&&n.addGrammar(e)}),t.map(e=>Kt[e]).forEach(e=>{e&&e()}),n}export{w as AsyncHighlighter,m as Context,Yt as GRAMMARS,b as Grammar,y as Highlighter,v as Lexer,d as Utils,en as init};
